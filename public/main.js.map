{"version":3,"sources":["./src/app/customer-search/customer-search.component.ts","./src/app/customer-search/customer-search.component.html","./src/app/customers/customers.component.ts","./src/app/customers/customers.component.html","./src/environments/environment.ts","./src/app/product.service.ts","./src/app/categories/categories.component.ts","./src/app/categories/categories.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/category-element/category-element.component.ts","./src/app/category-element/category-element.component.html","./src/app/customer-service.service.ts","./src/app/app.module.ts","./src/app/auth.service.ts","./src/app/login.service.ts","./src/app/category.service.ts","./src/app/order/order.component.ts","./src/app/order/order.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/order.service.ts","./src/main.ts","./src/app/products/products.component.ts","./src/app/products/products.component.html","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject, fromEventPattern } from 'rxjs';\n\nimport {\n  debounceTime, distinctUntilChanged, switchMap\n} from 'rxjs/operators';\n\nimport { Customer } from '../customer';\nimport { CustomerServiceService } from '../customer-service.service';\n\n@Component({\n  selector: 'app-customer-search',\n  templateUrl: './customer-search.component.html',\n  styleUrls: ['./customer-search.component.css']\n})\nexport class CustomerSearchComponent implements OnInit {\n\n  customers$: Observable<Customer[]>;\n  private searchTerms = new Subject<String>();\n\n  constructor(private CustomerService: CustomerServiceService) { }\n\n  search(term: string): void{\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.customers$ = this.searchTerms.pipe(\n      debounceTime(300),\n\n      distinctUntilChanged(),\n\n      switchMap((term: string) => this.CustomerService.searchCustomers(term)),\n    );\n  }\n\n}\n","<div class=\"search\">\n    <h4>Customer Search</h4>\n\n    <input type=\"text\" #searchbox (input)=\"search(searchbox.value)\" />\n\n    <ul>\n        <li *ngFor=\"let customer of customers$ | async\">\n            {{customer.firstName}}\n        </li>\n    </ul>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { Customer } from '../customer';\nimport { CustomerServiceService } from '../customer-service.service';\nimport { LoginService } from '../login.service';\n\nimport { variable } from '@angular/compiler/src/output/output_ast';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-customers',\n  templateUrl: './customers.component.html',\n  styleUrls: ['./customers.component.css']\n})\nexport class CustomersComponent implements OnInit {\n\n  customers : Customer[];\n  customerDetails;\n  customerForm;\n\n  constructor(private CustomerService: CustomerServiceService, private fb: FormBuilder, private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n    console.log(\"hello world!!\");\n    this.getCustomers();\n    this.customerForm = this.fb.group({\n      firstName: ['', Validators.required],\n      lastName: ['', Validators.required],\n      username: ['', Validators.required],\n      password: ['', Validators.required],\n      memberStatus: false,\n    });\n  }\n\n  getCustomers(): void {\n    console.log(\"hello world\");\n    this.CustomerService.getCustomers().subscribe(customers => this.customers = customers);\n  }\n\n  onSubmit(customerData) {\n    this.CustomerService.addCustomer( customerData as Customer).subscribe(customers=> this.router.navigate(['dashboard']));\n    \n    console.warn('Your order has been submitted', customerData);\n  }\n\n  search(name) {\n    this.CustomerService.searchCustomers(name).subscribe(customer => console.log(customer));\n  }\n\n  logout(): void {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n  }\n\n  onClick(): void {\n    var form = document.getElementById('form');\n    form.style.display = 'block';\n\n    var btn = document.getElementById('formbtn');\n    btn.style.display = 'none';\n\n    var cancelbtn = document.getElementById('cancelbtn');\n    cancelbtn.style.display = 'block';\n  }\n\n  goback(): void {\n    var form = document.getElementById('form');\n    form.style.display = 'none';\n\n    var btn = document.getElementById('formbtn');\n    btn.style.display = 'block';\n\n    var cancelbtn = document.getElementById('cancelbtn');\n    cancelbtn.style.display = 'none';\n  }\n}","<h2 style=\"text-align: center;\">Customers</h2>\n<nav>\n    <a routerLink=\"/customers\">Customers</a>\n    <br><br><br>\n    <a routerLink=\"/products\">Products</a> <br><br><br>\n    <a routerLink=\"/dashboard\">Dashboard</a> <br><br><br><br><br><br><br><br>\n    <button (click)=\"logout()\">Logout</button>\n</nav>\n<div class=\"add-form\"> \n    <button id=\"formbtn\" (click)=\"onClick()\">Add new customer</button>\n    <button id=\"cancelbtn\" (click)=\"goback()\" style=\"display: none;\">Cancel</button>\n    <form [formGroup]=\"customerForm\" (ngSubmit)=\"onSubmit(customerForm.value)\" id=\"form\" style=\"display: none;\">\n        <div>\n            <input type=\"text\"\n            placeholder=\"First Name\" formControlName=\"firstName\" required/>\n        </div> <br>\n        <div>\n            <input type=\"text\"\n            placeholder=\"Last Name\" formControlName=\"lastName\" />\n        </div> <br>\n        <div>\n            <input type=\"text\"\n            placeholder=\"Username\" formControlName=\"username\" />\n        </div> <br>\n        <div>\n            <input type=\"text\"\n            placeholder=\"Password\" formControlName=\"password\" />\n        </div> <br>\n        <div>\n            Membership\n            <input type=\"checkbox\" formControlName=\"memberStatus\" />\n        </div> <br>\n        <button type=\"submit\">\n            Save\n        </button>\n    </form>\n</div>\n<br>\n<app-customer-search></app-customer-search>\n<div class=\"customers\">\n    <ul>\n        <li *ngFor=\"let customer of customers\">\n            {{customer.firstName}}\n        </li>\n    </ul>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\n\nimport { Customer } from './customer';\nimport { Product } from './product';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { templateJitUrl } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProductService {\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  getProducts(): Observable<Product[]> {\n    return this.http.get<Product[]>('products', this.httpOptions)\n  }\n\n  addProduct(ProductData, id): Observable<any> {\n    return this.http.post<any>(`products/add/${id}`, ProductData, this.httpOptions);\n  }\n\n  deleteProduct(productId): Observable<any> {\n    return this.http.delete<any>(`product/delete/${productId}`, this.httpOptions);\n  }\n}","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\nimport { LoginService } from '../login.service';\n\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-categories',\n  templateUrl: './categories.component.html',\n  styleUrls: ['./categories.component.css']\n})\nexport class CategoriesComponent implements OnInit {\n\n  categories: Category[];\n\n  categoryForm;\n\n  constructor(private categoryService: CategoryService, private fb: FormBuilder, private router: Router, private loginService: LoginService) { }\n\n  ngOnInit(): void {\n    this.getCategories();\n    this.categoryForm = this.fb.group({\n      name: ''\n    })\n  }\n\n  getCategories(): void{\n    this.categoryService.getCategory().subscribe(category => this.categories = category );\n  }\n\n  onSubmit(categoryData): void {\n    this.categoryService.addCategory(categoryData).subscribe(msg => window.location.reload());\n  }\n\n  logout(): void {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n  }\n\n  onClick(): void {\n    var formbtn = document.getElementById('formbtn');\n    formbtn.style.display = 'none';\n\n    var cancelbtn = document.getElementById('cancelbtn');\n    cancelbtn.style.display = 'block';\n\n    var form = document.getElementById('form');\n    form.style.display = 'block';\n  }\n\n  goback(): void {\n    var formbtn = document.getElementById('formbtn');\n    formbtn.style.display = 'block';\n\n    var cancelbtn = document.getElementById('cancelbtn');\n    cancelbtn.style.display = 'none';\n\n    var form = document.getElementById('form');\n    form.style.display = 'none';\n  }\n}\n","<h2 style=\"text-align: center;\">Categories</h2>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a> <br><br><br>\n    <a routerLink=\"/customers\">Customers</a> <br><br><br>\n    <a routerLink=\"/categories\">Categories</a> <br><br><br>\n    <a routerLink=\"/products\">Products</a> <br><br><br><br><br>\n    <button (click)=\"logout()\">Logout</button>\n</nav>\n<div class=\"add-form\"> \n    <button (click)=\"onClick()\" id=\"formbtn\">Add new category</button>\n    <button (click)=\"goback()\" id=\"cancelbtn\" style=\"display: none;\">Cancel</button> <br>\n    <form [formGroup]=\"categoryForm\" (ngSubmit)=\"onSubmit(categoryForm.value)\" style=\"display: none;\" id=\"form\">\n        <div>\n            <input type=\"text\"\n            placeholder=\"Name\" formControlName=\"name\" />\n        </div><br>\n        <button type=\"submit\">\n            Save\n        </button>\n    </form>\n</div>\n<ul>\n   <li *ngFor=\"let category of categories\">\n        <a routerLink=\"/category/{{category._id}}\">{{category.name}}</a>\n   </li> \n</ul>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from '../login.service';\nimport { Customer } from '../customer';\n\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  user;\n  constructor(private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.onStart();\n  }\n\n  onStart(): void{\n    this.user = this.loginService.canActivate();\n  }\n\n  logout(): void {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n  }\n}\n","<h2 style=\"text-align: center;\">Dashboard</h2>\n<nav>\n    <a routerLink=\"/customers\">Customers</a>\n    <br><br><br>\n    <a routerLink=\"/products\">Products</a> <br><br><br>\n    <a routerLink=\"/dashboard\">Dashboard</a> <br><br><br><br><br><br><br><br>\n    <button (click)=\"logout()\">Logout</button>\n</nav>\n<div class=\"userGreet\" *ngIf=\"user\">\n    Welcome back {{user.user.username}}\n</div>\n<router-outlet></router-outlet>\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'crm-app';\n}\n","<h1>Crm Application</h1>\n<router-outlet></router-outlet>","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { FormBuilder, Form } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\n\nimport { Category } from '../category';\nimport { CategoryService } from '../category.service';\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\n\nimport { ThrowStmt } from '@angular/compiler';\n\n\n@Component({\n  selector: 'app-category-element',\n  templateUrl: './category-element.component.html',\n  styleUrls: ['./category-element.component.css']\n})\n\nexport class CategoryElementComponent implements OnInit {\n\n  category: Category[];\n  productForm;\n  products: Product[];\n\n  constructor(private categoryService: CategoryService,\n              private route: ActivatedRoute,\n              private location: Location,\n              private fb: FormBuilder,\n              private productService: ProductService,\n              private router: Router) { }\n\n  ngOnInit(): void {\n    this.getCategory();\n    this.getCategoryProducts();\n    this.productForm = this.fb.group({\n      name: '',\n      price: '',\n      quantity: ''\n    });\n  }\n\n  getCategory(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n  \n    this.categoryService.getOneCategory(id).subscribe(result => this.category = result);\n  }\n\n  getCategoryProducts(): void {\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.categoryService.getProductsinCategory(id).subscribe(result => this.products = result);\n  }\n\n  onSubmit(ProductData): void {\n    const id = this.route.snapshot.paramMap.get('id');\n\n    this.productService.addProduct(ProductData as Product, id as string).subscribe(msg => window.location.reload());\n  }\n\n  goBack(): void{\n    this.location.back();\n  }\n\n  deleteProduct(productId): void{\n    this.productService.deleteProduct(productId).subscribe(result => this.router.navigate(['products']));\n  }\n}\n","<div>\n    <h2>Categories</h2>\n    <div  *ngIf=\"category\">\n        <h3>\n            {{category.name}}\n        </h3>\n    </div>\n    <br>\n    <br>\n    <div> \n        Add new product  \n        <form [formGroup]=\"productForm\" (ngSubmit)=\"onSubmit(productForm.value)\">\n            <fieldset>\n                <div>\n                    <input type=\"text\"\n                    placeholder=\"Name\" formControlName=\"name\" />\n                </div>\n                <div>\n                    <input type=\"text\"\n                    placeholder=\"Price\" formControlName=\"price\" />\n                </div>\n                <div>\n                    <input type=\"text\"\n                    placeholder=\"Quantity\" formControlName=\"quantity\" />\n                </div>\n                <button type=\"submit\">\n                    Save\n                </button>\n            </fieldset>\n        </form>\n    </div>\n    <div>\n        <ul>\n            <li *ngFor=\"let product of products\">\n                {{product.name}}      <button (click)=\"deleteProduct(product._id)\">Delete</button>\n            </li>\n        </ul>\n    </div>\n</div>\n<button (click)=\"goBack()\">go back</button>","import { Injectable } from '@angular/core';\nimport { Customer } from './customer';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { templateJitUrl } from '@angular/compiler';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CustomerServiceService {\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  getCustomers(): Observable<Customer[]> {\n    return this.http.get<Customer[]>('users', this.httpOptions)\n  }\n\n  addCustomer(customer: Customer): Observable<any> {\n    return this.http.post<any>('add', customer, this.httpOptions).pipe(\n      tap((newcustomer: any) => this.log('Customer added')),\n      catchError(this.handleError<any>('addCustomer'))\n    )\n  }\n\n  searchCustomers(term: string): Observable<Customer[]> {\n    if ( !term.trim() ) {\n      return of([]);\n    }\n\n    else {\n      return this.http.get<Customer[]>(`search/${term}`).pipe(\n        tap(x => x.length ?\n          this.log(`found customers matching \"${term}\"`):\n          this.log(\"no such customers found\")\n          ),\n          catchError(this.handleError<Customer[]>('searchCustomers', []))\n      );\n    }\n  }\n\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  private log(message: string) {\n    console.log(message);\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { CustomersComponent } from './customers/customers.component';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomerSearchComponent } from './customer-search/customer-search.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProductsComponent } from './products/products.component';\nimport { CategoriesComponent } from './categories/categories.component';\nimport { CategoryElementComponent } from './category-element/category-element.component';\nimport { LoginComponent } from './login/login.component';\nimport { OrderComponent } from './order/order.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    CustomersComponent,\n    CustomerSearchComponent,\n    DashboardComponent,\n    ProductsComponent,\n    CategoriesComponent,\n    CategoryElementComponent,\n    LoginComponent,\n    OrderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { CanActivate, Router } from '@angular/router';\nimport { HttpClient, HttpHeaders} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  login(loginCred): Observable<any> {\n    return this.http.post('login', loginCred, this.httpOptions);\n  }\n\n  isAuthenticated(): any {\n    let userData = localStorage.getItem('userInfo');\n    if(userData && JSON.parse(userData)) {\n      return JSON.parse(userData);\n    }\n    return false;\n  }\n\n  setUserInfo(user) {\n    localStorage.setItem('userInfo', JSON.stringify(user));\n  }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders, HttpBackend } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  constructor(private authService : AuthService, private router : Router, private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n\n  canActivate() {\n    if(this.authService.isAuthenticated()) {\n      return this.authService.isAuthenticated();\n    }\n\n    this.router.navigate(['login']);\n    return false;\n  }\n\n  logout() {\n    localStorage.removeItem('userInfo');\n  }\n  \n}\n","import { Injectable } from '@angular/core';\n\nimport { Customer } from './customer';\nimport { Category } from './category';\n\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { templateJitUrl } from '@angular/compiler';\nimport { Product } from './product';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n\n  constructor(private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  getCategory(): Observable<Category[]> {\n    return this.http.get<Category[]>('products/categories', this.httpOptions)\n  }\n\n  addCategory(CategoryData): Observable<any> {\n    return this.http.post<any>('products/categories/add', CategoryData, this.httpOptions);\n  }\n\n  getOneCategory(id): Observable<Category[]> {\n    return this.http.get<Category[]>(`categories/${id}`, this.httpOptions);\n  }\n\n  getProductsinCategory(id): Observable<Product[]> {\n    return this.http.get<Product[]>(`category/products/${id}`, this.httpOptions);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { LoginService } from '../login.service';\nimport { Customer } from '../customer';\nimport { OrderService } from '../order.service';\n\n@Component({\n  selector: 'app-order',\n  templateUrl: './order.component.html',\n  styleUrls: ['./order.component.css']\n})\nexport class OrderComponent implements OnInit {\n\n  orders;\n\n  constructor(private orderService: OrderService, private loginService: LoginService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getOrders();\n  }\n\n  getOrders(): void {\n    this.orderService.getOrders().subscribe(result => this.orders = result);\n  }\n\n  logout(): void {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n  }\n}\n","<h2>Orders</h2>\n<nav>\n    <a routerLink=\"/customers\">Customers</a>\n    <a routerLink=\"/products\">Products</a>\n    <a routerLink=\"/dashboard\">Dashboard</a>\n    <button (click)=\"logout()\">Logout</button>\n</nav>\n<div>\n    <ul>\n        <li *ngFor=\"let order of orders\">\n            {{order.product}} -----------> {{order.customer}}\n        </li>\n    </ul>\n</div>\n<router-outlet></router-outlet>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CustomersComponent } from './customers/customers.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { ProductsComponent } from './products/products.component';\nimport { CategoriesComponent } from './categories/categories.component'; \nimport { CategoryElementComponent } from './category-element/category-element.component';\nimport { LoginComponent } from './login/login.component';\nimport { OrderComponent } from './order/order.component';\n\nconst routes: Routes = [\n  { path: 'customers', component: CustomersComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'login', component: LoginComponent},\n  { path: '', redirectTo: '/login', pathMatch: 'full'},\n  { path: 'products', component: ProductsComponent},\n  { path: 'categories', component: CategoriesComponent},\n  { path: 'category/:id', component: CategoryElementComponent},\n  { path: 'orders', component: OrderComponent}\n]\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\n\nimport { LoginService } from '../login.service';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm;\n\n  constructor(private loginService: LoginService, private fb: FormBuilder, private router: Router, private authService: AuthService) { }\n\n  ngOnInit(): void {\n\n    this.loginForm = this.fb.group({\n      username: '',\n      password: ''\n    });\n  }\n\n  onSubmit(loginCred): void {\n    this.authService.login(loginCred).subscribe(result => {\n      this.authService.setUserInfo({'user': result});\n      this.router.navigate(['dashboard']);\n    });\n  }\n\n}\n","<h1>Login</h1>\n<div> \n    <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit(loginForm.value)\">\n        <div>\n            <input type=\"text\"\n            placeholder=\"Username\" formControlName=\"username\" />\n        </div>\n        <br>\n        <div>\n            <input type=\"password\"\n            placeholder=\"Password\" formControlName=\"password\" />\n        </div>\n        <br>\n        <button type=\"submit\">\n            Save\n        </button>        \n    </form>\n</div>","import { Injectable } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { catchError, map, tap } from 'rxjs/operators';\n\nimport { HttpClient, HttpHeaders, HttpBackend } from '@angular/common/http';\nimport { CanActivate, Router } from '@angular/router';\n\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OrderService {\n\n  constructor(private authService : AuthService, private router : Router, private http: HttpClient) { }\n\n  httpOptions: object = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  }\n\n  placeOrder(product, customer): Observable<any>{\n    return this.http.post<any>(`order/${customer}/${product}`, this.httpOptions);\n  }\n\n  getOrders(): Observable<any> {\n    return this.http.get<any>('orders', this.httpOptions);\n  }\n}\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable } from 'rxjs';\n\nimport { ProductService } from '../product.service';\nimport { Product } from '../product';\nimport { LoginService } from '../login.service';\nimport { OrderService } from '../order.service';\n\nimport { FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-products',\n  templateUrl: './products.component.html',\n  styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n\n  products: Product[];\n  productForm;\n  user;\n\n  constructor(private productService: ProductService, \n              private fb: FormBuilder, \n              private loginService: LoginService, \n              private router: Router, \n              private orderService: OrderService) { }\n\n  ngOnInit(): void {\n    this.getProducts();\n    this.getCustomer();\n  }\n\n  getCustomer(): void {\n    this.user = this.loginService.canActivate();\n  }\n\n  getProducts(): void{\n    this.productService.getProducts().subscribe(product => this.products = product )\n  }\n\n  logout(): void {\n    this.loginService.logout();\n    this.router.navigate(['login']);\n  }\n\n  order(productId, customerId): void {\n    this.orderService.placeOrder(productId, customerId).subscribe(result => this.router.navigate(['orders']));\n  }\n}\n","<h2 style=\"text-align: center;\">Products</h2>\n<nav>\n    <a routerLink=\"/dashboard\">Dashboard</a> <br><br><br>\n    <a routerLink=\"/customers\">Customers</a> <br><br><br>\n    <a routerLink=\"/categories\">Categories</a> <br><br><br>\n    <a routerLink=\"/products\">Products</a><br><br><br><br><br>\n    <div *ngIf=\"user\">\n        <button (click)=\"logout()\">Logout</button>\n    </div>\n</nav>\n\n<ul>\n   <li *ngFor=\"let product of products\">\n        {{product.name}}       <button (click)=\"order(product._id, user.user._id)\">Buy</button>\n   </li> \n</ul>\n<router-outlet></router-outlet>","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}